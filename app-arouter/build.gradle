plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion android_versions.compileSdkVersion
    buildToolsVersion android_versions.buildToolsVersion

    defaultConfig {
        applicationId "com.laputa.arouter"
        minSdkVersion android_versions.minSdkVersion
        targetSdkVersion android_versions.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

//repositories {
//    flatDir {
//        dirs 'libs'
//    }
//}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar", "*.aar"])

//    implementation(name:'xxx', ext:'aar')

    android_dependencies.each {
        k, v ->
            println("-$v")
            implementation v
    }
    test_dependencies.each {
        k, v ->
            println("-$v")
            testImplementation v
    }
    android_test_dependencies.each {
        k, v ->
            println("-$v")
            androidTestImplementation v
    }
    thrid_common_dependencies.each {
        k, v ->
            println("-$v")
            implementation v
    }

    // 各个模块开发中依赖对方的 service 包
     implementation project(":module-arouter-login")
     implementation project(":module-arouter-home")
    // service包，完成解耦
    implementation project(":lib-arouter-service")

    implementation thrid_dependencies.arouter_api
    kapt thrid_dependencies.arouter_compiler

}